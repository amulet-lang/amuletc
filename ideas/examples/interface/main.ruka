const Num = interface (&'a) {
    (+): (&'a) -> 'a
}

const Vector = record {
    x: int,
    y: int
}

pub fn (self: &Vector).(+) -> Vector = (rhs: &Vector) {
    Vector.{ x = self.x + rhs.x, y = self.y + rhs.y }
}

fn add -> Num = (x, y: Num) {
    x + y
}

fn main -> Result(unit) = () {
    let a = Vector.{ x = 10, y = 5 }
    let b = Vector.{ x = 5, y = 10 }
    let c = a + b

    @assert(c.x == 15 and c.y == 15).?
    @assert_neq(@type(a), @type(c)).?

    let d = 10
    let e = 5
    let f = add(d, e)

    @assert(f == 15).?

    Ok <| ()
}
