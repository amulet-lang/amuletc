const Num = interface ('a) {
    (+): (&'a) -> 'a
    add: (&'a) -> 'a
}

const Vector = record {
    x: int,
    y: int
}

const (+) -> Vector = fn (lhs: &Vector, rhs: &Vector) {
    Vector.{
        .x = lhs.x + rhs.x,
        .y = lhs.y + rhs.y
    }
end

const add -> Vector = fn (lhs: &Vector, rhs: &Vector) {
    Vector.{
        .x = lhs.x + rhs.x,
        .y = lhs.y + rhs.y
    }
}

const add -> Num = fn (x, y: Num) {
    x + y // or x.add(&y)
}

const main -> Result(unit) = fn () {
    let a = Vector.{x: 10, y: 5}
    let b = Vector.{x: 5, y: 10}
    let c = a + b

    @.assert(c.x == 15 and c.y == 15)?

    let d = 10
    let e = 5
    let f = add(d, e)

    @.assert(f == 15)?

    Ok <| ()
}
