const Num = interface (&'a) {
    (+): (&'a) -> 'a
}

const Vector = record {
    x: isize,
    y: isize
}

fn new = (x, y) {
    Vector.{ x, y }
}

pub fn (self: &Vector).add -> Vector = (rhs: &Vector) {
    Vector.{ x = self.x + rhs.x, y = self.y + rhs.y }
}

fn add -> Num = (x, y: Num) {
    x + y
}

fn main -> !unit = () {
    let a = new(10, 5)
    let b = new(5, 10)
    let c = a.add(b)

    @assert(c.x == 15 and c.y == 15).!
    @assert_neq(@typeOf(a), @typeOf(c)).!

    let d = 10
    let e = 5
    let f = add(d, e)

    @assert(f == 15).!
}
