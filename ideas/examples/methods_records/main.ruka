const Vector = record {
    pub const t = record {
        x: int,
        y: int
    }

    pub fn new -> t = (x, y: int) {
        t.{x, y}
    }

    pub fn &t.add -> t = (other: &t) {
        t.{
            x = self.x + other.x,
            y = self.y + other.y
        }
    }
}

fn main = () {
    let a = Vector.new(1, 2)
    @assert(@type_of(a) == Vector.t).?

    let b = Vector.new(3, 4)
    @assert(@type_of(b) == Vector.t).?

    let c = a.add(&b)
    @assert(@type_of(c) == Vector.t).?
}
