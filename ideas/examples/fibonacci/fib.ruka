pub const fibonacci -> int = (n: int) do
    const BUFFER_SIZE = 50
    let mut cache = [BUFFER_SIZE]{0, 1, 1, -1}

    fibonacci'(n, mut cache[..])
end

const fibonacci' -> int = (n: int, mut arr: []int) do
    if n < 0 do
        0
    else if cache[n] != -1 do
        cache[n]
    else do
        cache[n] = fibonacci'(n-1) + fibonacci'(n-2)
        cache[n]
    end
end

test "fibonacci" -> Result(unit) = () do
    let result = fibonacci(5)
    @.assert(result == 5)?

    Ok <| ()
end
