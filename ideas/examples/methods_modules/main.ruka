const Vector = record {
    pub const t = record {
        x: int,
        y: int
    }

    pub const new -> t = fn (x, y: int) do
        t.{.x, .y}
    end

    pub const add -> t = fn (self, other: &t) do
        t.{
            .x = self.x + other.x,
            .y = self.y + other.y
        }
    end
}

const main = fn () do
    let a = Vector.new(1, 2)
    @assert(@type_of(a) == Vector.t)

    let b = Vector.new(3, 4)
    @assert(@type_of(b) == Vector.t)

    let c = a.add(&b)
    @assert(@type_of(c) == Vector.t)
end
